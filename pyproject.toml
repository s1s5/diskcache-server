[tool.poetry]
name = "diskcache-server"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

[tool.poetry.dependencies]
python = "^3.10"
gunicorn = "^20.1.0"
uvicorn = "^0.17.6"
fastapi = "^0.78.0"
diskcache = "^5.4.0"
aiofiles = "^0.8.0"
prometheus-fastapi-instrumentator = {git = "https://github.com/s1s5/prometheus-fastapi-instrumentator.git"}
pytest = "^7.1.2"
coverage = "^6.4.3"
hypercorn = "^0.13.2"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
flake8 = "^4.0.1"
isort = "^5.10.1"
mypy = "^0.950"
pre-commit = "^2.19.0"
radon = "^5.1.0"
pyproject-flake8 = "^0.0.1-alpha.4"
types-aiofiles = "^0.8.9"
httpx = {extras = ["http2"], version = "^0.23.0"}
requests = "^2.28.1"
types-requests = "^2.28.8"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 110
exclude = """
/(\\.git/
  |\\.eggs
  |\\.hg
  |__pycache__
  |\\.cache
  |\\.ipynb_checkpoints
  |\\.mypy_cache
  |\\.pytest_cache
  |\\.tox
  |\\.venv
)/
"""

[tool.mypy]
plugins = []
namespace_packages = true
ignore_missing_imports = true  # スタブがないライブラリを無視する
exclude = '(?x)(settings\\.py|^.*/migrations/.*\\.py$)'


[tool.django-stubs]
django_settings_module = "settings"

[tool.isort]
line_length = 110
multi_line_output = 3
include_trailing_comma = true
profile = "black"
extend_skip_glob = []

[tool.flake8]
max-line-length = 110
max-complexity = 18
extend-ignore = "E203,"  # blackと競合してる
exclude = [
]
radon-max-cc = 10

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

omit = [
    "*/snapshots/*",
    "*/tests/*",
    "*/admin.py",
    "*/factories.py",
]

ignore_errors = true
